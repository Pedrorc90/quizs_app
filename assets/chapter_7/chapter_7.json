{
  "questions": [
    {
      "number": 1,
      "question": "1. What is the name of a file that declares a module?",
      "choices": [
        "A. mod.java",
        "B. mod-data.java",
        "C. mod-info.java",
        "D. module.java",
        "E. module-data.java",
        "F. module-info.java"
      ]
    },
    {
      "number": 2,
      "question": "2. Suppose you have a module that calls exports(ChocolateLab.class) using a service locator. Which part of the module service contains this class?",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 3,
      "question": "3. Which are considered part of a service? (Choose two.)",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface"
      ]
    },
    {
      "number": 4,
      "question": "4. Given the following diagram, how many of the following are named modules?",
      "choices": [
        "A. 0",
        "B. 1",
        "C. 2",
        "D. 3",
        "E. 4"
      ]
    },
    {
      "number": 5,
      "question": "5. Given the diagram from the previous question, which is an automatic module?",
      "choices": [
        "A. dog.bark",
        "B. dog.fluffy",
        "C. dog.hair",
        "D. dog.husky",
        "E. None of the above"
      ]
    },
    {
      "number": 6,
      "question": "6. Given the diagram from Question 4, which is a default module?",
      "choices": [
        "A. dog.bark",
        "B. dog.fluffy",
        "C. dog.hair",
        "D. dog.husky",
        "E. None of the above"
      ]
    },
    {
      "number": 7,
      "question": "7. Given the diagram from Question 4, how many are unnamed modules?",
      "choices": [
        "A. 0",
        "B. 1",
        "C. 2",
        "D. 3",
        "E. 4"
      ]
    },
    {
      "number": 8,
      "question": "8. Which of the following statements are true? (Choose two.)",
      "choices": [
        "A. It is a good practice to add the --add-exports option to your java command.",
        "B. It is permitted, but not recommended, to add the --add-exports option to your java command.",
        "C. There is no --add-exports option on the java command.",
        "D. It is a good practice to add the --add-requires option to your java command.",
        "E. It is permitted, but not recommended, to add the --add-requires option to your java command.",
        "F. There is no --add-requires option on the java command."
      ]
    },
    {
      "number": 9,
      "question": "9. How many of the following are legal module-info.java files?",
      "code": "module com.koala {\n  exports cute;\n}\nmodule com-koala {\n  exports cute;\n}\npublic module com.koala {\n  exports cute;\n}\npublic module com-koala {\n  exports cute;\n}",
      "choices": [
        "A. None",
        "B. One",
        "C. Two",
        "D. Three",
        "E. Four"
      ]
    },
    {
      "number": 10,
      "question": "10. Which two would be best to combine into a single module?",
      "choices": [
        "A. Consumer and service locator",
        "B. Consumer and service provider",
        "C. Consumer and service provider interface",
        "D. Service locator and service provider interface",
        "E. Service locator and service provider",
        "F. Service provider and service provider interface"
      ]
    },
    {
      "number": 11,
      "question": "11. Which command could you run to print output similar to the following?",
      "description": "java.base@17\njava.compiler@17\njava.datatransfer@17\njava.desktop@17\nâ€¦",
      "choices": [
        "A. java --all-modules",
        "B. java --describe-modules",
        "C. java --list-modules",
        "D. java --output-modules",
        "E. java --show-modules",
        "F. None of the above"
      ]
    },
    {
      "number": 12,
      "question": "12. Suppose we have an automatic module on the module path named dog-arthur2.jar and no Automatic-Module-Name specified. What module name should named modules use to reference it?",
      "choices": [
        "A. dog-arthur",
        "B. dog-arthur2",
        "C. dog.arthur",
        "D. dog.arthur2",
        "E. None of the above"
      ]
    },
    {
      "number": 13,
      "question": "13. Each box in the diagram corresponds to a module. Given the module dependencies in the diagram, which boxes represent the service provider interface and service provider, respectively?",
      "choices": [
        "A. W and X",
        "B. W and Z",
        "C. X and Y",
        "D. X and Z",
        "E. Y and Z",
        "F. None of the above"
      ]
    },
    {
      "number": 14,
      "question": "14. Using the diagram in the previous question, which boxes represent the consumer and service locator, respectively?",
      "choices": [
        "A. W and X",
        "B. W and Z",
        "C. X and Y",
        "D. X and Z",
        "E. Y and Z",
        "F. None of the above"
      ]
    },
    {
      "number": 15,
      "question": "15. What is the minimum number of JAR files you need for a cyclic dependency?",
      "choices": [
        "A. 0",
        "B. 1",
        "C. 2",
        "D. 3",
        "E. 4"
      ]
    },
    {
      "number": 16,
      "question": "16. Fill in the blank with code to look up and call a service.\nString cheese = ServiceLoader.load(Mouse.class)\n   .map(_________________)\n   .map(Mouse::favoriteFood)\n   .findFirst()\n   .orElse(\"\");",
      "choices": [
        "A. Mouse.get()",
        "B. Mouse::get",
        "C. Provider.get()",
        "D. Provider::get",
        "E. None of the above"
      ]
    },
    {
      "number": 17,
      "question": "17. Suppose we want to have two modules: com.ny and com.sf. Which is true about the placement of the module-info.java file(s)?",
      "choices": [
        "A. One module-info.java file is required in position Z.",
        "B. Two module-info.java files are required, in positions V and X.",
        "C. Two module-info.java files are required, in positions W and Y.",
        "D. Three module-info.java files are required, in positions V, X, and Z.",
        "E. Three module-info.java files are required, in positions W, Y, and Z.",
        "F. None of the above."
      ]
    },
    {
      "number": 18,
      "question": "18. Consider the modules in the previous diagram. Suppose we want the code in module com.sf to depend on code in module com.ny. Which of the following directives goes into module com.sf's module-info file to configure that behavior?",
      "choices": [
        "A. export com.ny;",
        "B. exports com.ny;",
        "C. require com.ny;",
        "D. require com.ny.city;",
        "E. requires com.ny;",
        "F. requires com.ny.city;"
      ]
    },
    {
      "number": 19,
      "question": "19. Consider the modules diagram in Question 17. Suppose we want the code in module com.sf to depend on code in module com.ny. Which of the following directives goes into module com.ny's module-info file to configure that behavior?",
      "choices": [
        "A. export com.ny;",
        "B. export com.ny.city;",
        "C. exports com.ny;",
        "D. exports com.ny.city;",
        "E. requires com.ny;",
        "F. requires com.ny.city;"
      ]
    },{
      "number": 20,
      "question": "20. Suppose the consumer, service locator, service provider, and service provider interface are each in separate modules. Which of the following best describes the following module-info file?",
      "code": "module nature.tree {\n  provides nature.sapling.Tree with nature.tree.Maple;\n}",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },    {
      "number": 21,
      "question": "21. Which options are commonly used when compiling a module with the javac command?",
      "choices": [
        "A. -c and -d",
        "B. -d and -p",
        "C. -c and -p",
        "D. -c, -d, and -p",
        "E. None of the above"
      ]
    },
    {
      "number": 22,
      "question": "22. Which of the following are modules supplied by the JDK? (Choose three.)",
      "choices": [
        "A. java.base",
        "C. java.desktop",
        "E. java.sql",
        "F. java.swing"
      ]
    },
    {
      "number": 23,
      "question": "23. Which best describes a top-down migration? (Choose two.)",
      "choices": [
        "A. The first step is to move all the modules to the module path.",
        "B. The first step is to move a single module to the module path.",
        "C. Most steps consist of changing an automatic module to a named module.",
        "D. Most steps consist of changing an automatic module to an unnamed module.",
        "E. Most steps consist of changing an unnamed module to an automatic module.",
        "F. Most steps consist of changing an unnamed module to a named module."
      ]
    },
    {
      "number": 24,
      "question": "24. Suppose the consumer, service locator, service provider, and service provider interface are each in separate modules. Which of the following best describes the following module-info file?",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 25,
      "question": "25. Suppose you have these two JARs that are not modules. Which steps, when taken together, would be the best way to make them modules? (Choose two.)",
      "choices": [
        "A. Add a module-info.java to each.",
        "B. Add them to the classpath.",
        "C. Create a third module to contain the common code.",
        "D. Merge them into one module to break the cyclic dependency.",
        "E. Rename the modules to use dashes instead of dots."
      ]
    },
    {
      "number": 26,
      "question": "26. Which command produces output such as the following?\nanimal.puppy -> animal.dog",
      "choices": [
        "A. jdeps â€“d zoo.animal.puppy.jar",
        "B. jdeps â€“s zoo.animal.puppy.jar",
        "C. jmod â€“d zoo.animal.puppy.jar",
        "D. jmod â€“s zoo.animal.puppy.jar",
        "E. None of the above"
      ]
    },
    {
      "number": 27,
      "question": "27. Suppose the consumer, service locator, service provider, and service provider interface are each in separate modules. Which of the following best describes the following module-info file?",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 28,
      "question": "28. Suppose we have a com.bird module that contains a com.bird.tweet package and a Tweety class with a main() method. Which of the following can fill in the blank to run this program?\njava --module-path mods â€“module _________________",
      "choices": [
        "A. com.bird.Tweety",
        "B. com.bird.tweety.Tweety",
        "C. com.bird/Tweety",
        "D. com.bird.tweet/Tweety",
        "E. com.bird/com.bird.tweet.Tweety",
        "F. com.bird.tweet/com.bird.Tweety"
      ]
    },
    {
      "number": 29,
      "question": "29. Which types of modules are required to contain a module-info file?",
      "choices": [
        "A. Automatic only",
        "B. Named only",
        "C. Unnamed only",
        "D. Automatic and named",
        "E. Automatic and unnamed",
        "F. Named and unnamed"
      ]
    },
    {
      "number": 30,
      "question": "30. Suppose the consumer, service locator, service provider, and service provider interface are each in separate modules. Which of the following best describes the following module-info file?",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 31,
      "question": "31. Which command allows you to create a Java runtime image?",
      "choices": [
        "A. jdeps",
        "B. jmod",
        "C. jimage",
        "D. jlink",
        "E. None of the above"
      ]
    },
    {
      "number": 32,
      "question": "32. Suppose the consumer, service locator, service provider, and service provider interface are each in separate modules. Which of the following best describes the following module-info file?",
      "code": "module nature.tree{\n  requires nature.sapling;\n}",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 33,
      "question": "33. Which types of modules are allowed to contain a module-info file?",
      "choices": [
        "A. Automatic only",
        "B. Named only",
        "C. Unnamed only",
        "D. Automatic and named",
        "E. Automatic and unnamed",
        "F. Named and unnamed"
      ]
    },
    {
      "number": 34,
      "question": "Which of the following is true of this module declaration?",
      "code": "1: class com.mammal {\n2:    exports com.mammal.cat;\n3:    exports cat.mammal.mouse to com.mice;\n4:    uses com.animal;\n5: }",
      "choices": [
        "A. The first line that fails to compile is line 1.",
        "B. The first line that fails to compile is line 2.",
        "C. The first line that fails to compile is line 3.",
        "D. The first line that fails to compile is line 4.",
        "E. The code compiles."
      ]
    },
    {
      "number": 35,
      "question": "35. How many of these directives can be used in a module-info.java file: closes, export, import, require, and uses?",
      "choices": [
        "A. None",
        "B. One",
        "C. Two",
        "D. Three",
        "E. Four",
        "F. Five"
      ]
    },
    {
      "number": 36,
      "question": "Suppose the consumer, service locator, service provider, and service provider interface are each in separate modules. Which of the following best describes this module-info file?",
      "code": "module nature.tree{\n  exports nature.tree.leaf;\n}",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 37,
      "question": "Which of the following are modules supplied by the JDK? (Choose three.)",
      "choices": [
        "A. jdk.base",
        "B. jdk.basic",
        "C. jdk.desktop",
        "D. jdk.javadoc",
        "E. jdk.jdeps",
        "F. jdk.net"
      ]
    },
    {
      "number": 38,
      "question": "38. Which are true statements about types of migration? (Choose three.)",
      "choices": [
        "A. All modules are immediately moved to the module path in a bottom-up migration.",
        "B. All modules are immediately moved to the module path in a top-down migration.",
        "C. Modules migrate before the modules that depend on them in a bottom-up migration.",
        "D. Modules migrate before the modules that depend on them in a top-down migration.",
        "E. Modules that are not yet named modules are automatic modules in a bottom-up migration.",
        "F. Modules that are not yet named modules are automatic modules in a top-down migration."
      ]
    },
    {
      "number": 39,
      "question": "A class in which of the following parts of a module service should include a method call to load(ChocolateLab.class) that would allow callers to use it?",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 40,
      "question": "How many of these module declarations are valid?",
      "code": "module com.leaf {}\nmodule com.leaf2 {}\nmodule com-leaf { }\nmodule LEAF {}\nmodule leaf2 {}",
      "choices": [
        "A. Zero",
        "B. One",
        "C. Two",
        "D. Three",
        "E. Four",
        "F. Five"
      ]
    },
    {
      "number": 41,
      "question": "41. Which is a benefit of ServiceLoader?",
      "choices": [
        "A. It allows you to add functionality without recompiling the application.",
        "B. It allows you to load a service written in C++.",
        "C. It is an interface.",
        "D. When implementing a service, it references the ServiceLoader."
      ]
    },
    {
      "number": 42,
      "question": "42. Which are true statements? (Choose two.)",
      "choices": [
        "A. Code on the classpath can reference code in automatic, named, and unnamed modules.",
        "B. Code on the classpath can reference code in named modules, but not automatic and unnamed modules.",
        "C. Code on the classpath can reference code in automatic and named modules, but not unnamed modules.",
        "D. Code on the module path can reference code in automatic, named, and unnamed modules.",
        "E. Code on the module path can reference code in named modules, but not automatic and unnamed modules.",
        "F. Code on the module path can reference code in automatic and named modules, but not unnamed modules."
      ]
    },
    {
      "number": 43,
      "question": "43. Suppose we have the packages in the diagram. What could we add to the module-info.java in com.duck to allow the com.park module to reference the Duckling class but not allow the com.bread module to do the same?",
      "choices": [
        "A. exports com.duckling;",
        "B. exports com.duckling from com.park;",
        "C. exports com.duckling to com.park;",
        "D. exports com.park from com.duckling;",
        "E. exports com.park to com.duckling;",
        "F. None of the above"
      ]
    },
    {
      "number": 44,
      "question": "44. Given the diagram in the previous question, what could we add to module-info.java in com.duck to allow the com.park package to reference the Duckling class, but not allow the Egg class to reference the Duckling class?",
      "choices": [
        "A. exports com.duckling;",
        "B. exports com.duckling from com.park;",
        "C. exports com.duckling to com.park;",
        "D. exports com.park from com.duckling;",
        "E. exports com.park to com.duckling;",
        "F. None of the above"
      ]
    },
    {
      "number": 45,
      "question": "45. Given the diagram in Question 43 and the correct export statement to share only com.duckling, which of the following should be included in the module-info.java file of com.park to specify that com.park should have access to the com.duckling and com.bread packages, but not the com.egg package?",
      "choices": [
        "A. require com.duck, com.bread;",
        "B. requires com.duck; com.bread;",
        "C. require com.duckling, com.bread;",
        "D. requires com.duckling; com.bread;",
        "E. None of the above"
      ]
    },
    {
      "number": 46,
      "question": "46. Which is part of the service and has a provides directive?",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Service provider",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 47,
      "question": "47. Which command is the simplest way to list suggestions for classes in jdk.unsupported?",
      "choices": [
        "A. jdeps cookie.jar",
        "B. jdeps â€“s cookie.jar",
        "C. jdeps â€“jdkinternals cookie.jar",
        "D. jdeps --jdkinternals cookie.jar",
        "E. jdeps -jdkunsupported cookie.jar",
        "F. jdeps --jdkunsupported cookie.jar"
      ]
    },
    {
      "number": 48,
      "question": "48. Which modules are on the classpath?",
      "choices": [
        "A. Automatic only",
        "B. Named only",
        "C. Unnamed only",
        "D. Automatic and named",
        "E. Automatic and unnamed",
        "F. Named and unnamed"
      ]
    },
    {
      "number": 49,
      "question": "49. Which line of code belongs in a service locator?",
      "choices": [
        "A. ServiceLoader loader = ServiceLoader.load();",
        "B. ServiceLoader loader = ServiceLoader.load(Mouse.class);",
        "C. ServiceLoader<Mouse> loader = ServiceLoader.load();",
        "D. ServiceLoader<Mouse> loader = ServiceLoader.load(Mouse.class);",
        "E. Mouse loader = ServiceLoader.load();",
        "F. Mouse loader = ServiceLoader.load(Mouse.class);"
      ]
    },
    {
      "number": 50,
      "question": "50. Which are true about a service? (Choose two.)",
      "choices": [
        "A. Changing the service provider interface always requires recompiling the service provider.",
        "B. Changing the service provider interface sometimes requires recompiling the service provider.",
        "C. Changing the service provider interface never requires recompiling the service provider.",
        "D. If the service provider interface references other classes in the method signatures, they are considered part of the service.",
        "E. If the service provider interface references other classes in the method signatures, they are not considered part of the service."
      ]
    },
    {
      "number": 51,
      "question": "51. Which modules are on the module path?",
      "choices": [
        "A. Automatic only",
        "B. Named only",
        "C. Unnamed only",
        "D. Automatic and named",
        "E. Automatic and unnamed",
        "F. Named and unnamed"
      ]
    },
    {
      "number": 52,
      "question": "52. Each box in the diagram corresponds to a module. The service locator and service provider interface share a module. Which boxes represent the consumer and service provider, respectively?",
      "choices": [
        "A. X and Y",
        "B. X and Z",
        "C. Y and Z",
        "D. Z and Z",
        "E. Z and Y",
        "F. None of the above"
      ]
    },
    {
      "number": 53,
      "question": "53. Which command is the simplest way to list what modules a JAR depends on without listing package names?",
      "choices": [
        "A. jdeps cookie.jar",
        "B. jdeps â€“s cookie.jar",
        "C. jdeps â€“jdkinternals cookie.jar",
        "D. jdeps --jdkinternals cookie.jar",
        "E. jdeps -jdk-unsupported cookie.jar",
        "F. jdeps --jdk-unsupported cookie.jar"
      ]
    },
    {
      "number": 54,
      "question": "54. What flag do you use on jlink in order to specify the directory where the generated runtime image should be placed?",
      "choices": [
        "A. -d",
        "B. --directory",
        "C. -d or --directory",
        "D. -o",
        "E. --output",
        "F. -o or --output",
        "G. None of the above"
      ]
    },
    {
      "number": 55,
      "question": "55. Fill in the blanks to list a way of getting a lot of useful information in debugging modules.",
      "choices": [
        "A. jar and show-modules",
        "B. jar and show-module-detail",
        "C. jar and show-module-resolution",
        "D. java and show-modules",
        "E. java and show-module-detail",
        "F. java and show-module-resolution"
      ]
    },
    {
      "number": 56,
      "question": "56. Suppose you have the following interface in a module named animal.insect.api. What needs to be included in the module-info file for it to be a service provider interface?",
      "choices": [
        "A. exports animal.insect.api;",
        "B. exports animal.insect.api.bugs;",
        "C. exports animal.insect.api.bugs.Bug;",
        "D. requires animal.insect.api;",
        "E. requires animal.insect.api.bugs;",
        "F. requires animal.insect.api.bugs.Bug;"
      ]
    },
    {
      "number": 57,
      "question": "57. Suppose you have the following class in a module named animal.insect.impl and the service provider interface module from Question 56. What needs to be included in the module-info for it to be a service provider? (Choose two.)",
      "choices": [
        "A. requires animal.insect.api;",
        "B. requires animal.insect.lookup;",
        "C. requires animal.printer;",
        "D. provides animal.insect.impl.Worm;",
        "E. provides animal.insect.api.bugs.Bug with animal.insect.impl.Worm;",
        "F. provides animal.insect.impl.Worm with animal.insect.api.bugs.Bug;"
      ]
    },
    {
      "number": 58,
      "question": "58. Suppose you have the following class in a module named animal.insect.lookup, the service provider interface from Question 56, and the service provider from Question 57. What needs to be included in the module-info file besides an exports directive for it to be a service locator? (Choose two.)",
      "choices": [
        "A. provides animal.insect.lookup;",
        "B. provides animal.insect.lookup.InsectFinder;",
        "C. requires animal.insect.api;",
        "D. requires animal.insect.api.Bug;",
        "E. uses animal.insect.api.bugs;",
        "F. uses animal.insect.api.bugs.Bug;"
      ]
    },
    {
      "number": 59,
      "question": "59. Suppose you have the following class in a module named animal.insect.printer, the service provider interface from Question 56, the service provider from Question 57, and the service locator from Question 58. What needs to be included in the module-info for it to be a consumer? (Choose two.)",
      "choices": [
        "A. requires animal.insect.api.bugs;",
        "B. requires animal.insect.lookup;",
        "C. requires animal.printer;",
        "D. uses animal.insect.api.bugs;",
        "E. uses animal.insect.api.bugs.Bug;",
        "F. uses animal.insect.lookup.InsectFinder;"
      ]
    },
    {
      "number": 60,
      "question": "60. Which command is the simplest way to list what modules a JAR depends on, including package names?",
      "choices": [
        "A. jdeps cookie.jar",
        "B. jdeps â€“s cookie.jar",
        "C. jdeps â€“jdkinternals cookie.jar",
        "D. jdeps --jdkinternals cookie.jar",
        "E. jdeps -jdk-unsupported cookie.jar",
        "F. jdeps --jdk-unsupported cookie.jar"
      ]
    },
    {
      "number": 61,
      "question": "61. How many modules are part of the cyclic dependency?",
      "code": "module com.light {\n   exports com.light;\n}\nmodule com.animal {\n   exports com.animal;\n   requires com.light;\n   requires com.plant;\n}\nmodule com.plant {\n   exports com.plant;\n   requires com.light;\n   requires com.animal;\n}\nmodule com.worm {\n   exports com.worm;\n   requires com.light;\n   requires com.animal;\n   requires com.plant;\n}",
      "choices": [
        "A. 0",
        "B. 1",
        "C. 2",
        "D. 3",
        "E. 4"
      ]
    },
    {
      "number": 62,
      "question": "62. What is true about the -d option?",
      "choices": [
        "A. It can be used with the jar command, but not the java command.",
        "B. It can be used with the java command, but not the jar command.",
        "C. It can be used with the jar and java commands and serves the same purpose for both.",
        "D. It can be used with the jar and java commands, but means 'directory' for the former and 'describe module' for the latter.",
        "E. None of the above."
      ]
    },
    {
      "number": 63,
      "question": "63. Assuming all referenced files and directories exist and are correct, what does this code do?",
      "code": "javac â€“m mods â€“d mouse mouse/com/mouse/*.java\n   mouse/module-info.java\njar â€“cvf mods/com.mouse.jar â€“C mouse/ .",
      "choices": [
        "A. Creates a JAR file representing the com.mouse module",
        "B. Creates a JAR file that is not a module",
        "C. Fails on the javac command",
        "D. Fails on the jar command"
      ]
    },
    {
      "number": 64,
      "question": "64. Which module is always in the jdeps output?",
      "choices": [
        "A. java.base",
        "B. java.lang",
        "C. java.self",
        "D. jdk.base",
        "E. jdk.lang",
        "F. jdk.self"
      ]
    },
    {
      "number": 65,
      "question": "65. Which are valid modes on the jmod command? (Choose three.)",
      "choices": [
        "A. create",
        "B. list",
        "C. hash",
        "D. show",
        "E. verbose",
        "F. version"
      ]
    },
    {
      "number": 66,
      "question": "66. This diagram shows the second step of a migration to modules. What type of migration is this?",
      "choices": [
        "A. Bottom-up",
        "B. Side-to-side",
        "C. Top-down",
        "D. There is not enough information to determine which type it is."
      ]
    },
    {
      "number": 67,
      "question": "67. Which are true statements about the diagram and scenario in the previous question? (Choose two.)",
      "choices": [
        "A. butterfly is an automatic module.",
        "B. butterfly is a named module.",
        "C. butterfly is an unnamed module.",
        "D. caterpillar is an automatic module.",
        "E. caterpillar is a named module.",
        "F. caterpillar is an unnamed module."
      ]
    },
    {
      "number": 68,
      "question": "68. Suppose we have the two JARs in the diagram on the module path and the module-info in the com.magic JAR only exports one package: com.magic.unicorn. There is no module-info file in the com.science JAR. How many of the four packages in the diagram can a third module on the module path access?",
      "choices": [
        "A. 0",
        "B. 1",
        "C. 2",
        "D. 3",
        "E. 4"
      ]
    },
    {
      "number": 69,
      "question": "69. Suppose the two JARs described in the previous question are on the classpath. How many of the four packages in the diagram can a module on the module path access?",
      "choices": [
        "A. 0",
        "B. 1",
        "C. 2",
        "D. 3",
        "E. 4"
      ]
    },
    {
      "number": 70,
      "question": "70. What is true about the following module-info.java file?",
      "code": "module Book { }",
      "choices": [
        "A. It does not compile because it is empty.",
        "B. It does not compile because the module name is uppercase.",
        "C. It does not compile because the module name has only one component.",
        "D. It does not compile for another reason.",
        "E. It compiles."
      ]
    },
    {
      "number": 71,
      "question": "71. When adding a new service provider, which of these do you need to recompile?",
      "choices": [
        "A. Consumer",
        "B. Service locator",
        "C. Existing service providers",
        "D. Service provider interface",
        "E. None of the above"
      ]
    },
    {
      "number": 72,
      "question": "72. When working with modules, what option names are equivalent to -m and -s?",
      "choices": [
        "A. --module and --short",
        "B. --module and --statistics",
        "C. --module and --summary",
        "D. --module-path and --short",
        "E. --module-path and --statistics",
        "F. --module-path and --summary"
      ]
    },
    {
      "number": 73,
      "question": "73. Which are considered part of a service?",
      "choices": [
        "A. Classes referenced by the implementation, but not the interface",
        "B. Classes referenced by the interface, but not the implementation",
        "C. Classes referenced by either the implementation or the interface",
        "D. None of the above"
      ]
    },
    {
      "number": 74,
      "question": "74. Which command uses â€“s to represent summary?",
      "choices": [
        "A. jdeps",
        "B. jlink",
        "C. jmod",
        "D. Both jdeps and jlink",
        "E. Both jlink and jmod",
        "F. All of the above",
        "G. None of the above"
      ]
    },
    {
      "number": 75,
      "question": "75. Suppose you have the following class in a module named animal.insect.impl. Which two most likely go in the module-info of the service locator? (Choose two.)",
      "choices": [
        "A. requires animal.insect.api.bugs;",
        "B. requires animal.insect.api.bugs.Bug;",
        "C. requires animal.insect.impl;",
        "D. uses animal.insect.api.bugs;",
        "E. uses animal.insect.api.bugs.Bug;",
        "F. uses animal.insect.api.bugs.Bug with animal.insect.impl.Worm;"
      ]
    },
    {
      "number": 76,
      "question": "76. Which of the following statements are true? (Choose two.)",
      "choices": [
        "A. A bottom-up migration has more steps involving the classpath than a top-down migration.",
        "B. A top-down migration has more steps involving the classpath than a bottom-up migration.",
        "C. Both types of migration have the same number of steps involving the classpath.",
        "D. A bottom-up migration has unnamed modules on the module path.",
        "E. A top-down migration has unnamed modules on the module path.",
        "F. Neither migration type has unnamed modules on the module path."
      ]
    },
    {
      "number": 77,
      "question": "77. Fill in the blank with code to look up and call a service.\nString cheese = ServiceLoader.load(Mouse.class)\n   .stream()\n   .map(_________________)\n   .map(Mouse::favoriteFood)\n   .findFirst()\n   .orElse(\"\");",
      "choices": [
        "A. Mouse.get()",
        "B. Mouse::get",
        "C. Provider.get()",
        "D. Provider::get",
        "E. None of the above"
      ]
    },
    {
      "number": 78,
      "question": "78. Given the following diagram, with each box representing a module, what statements need to be in module-info.java for the mammal module? (Choose three.)",
      "choices": [
        "A. exports mammal;",
        "B. exports mammal.eat;",
        "C. requires animal;",
        "D. requires animal.util;",
        "E. requires milk;",
        "F. requires milk.store;"
      ]
    },
    {
      "number": 79,
      "question": "79. Given the previous diagram and the following module-info.java for the panda module, what change can be made to the requires statement?\nmodule panda {\n   requires mammal;\n}",
      "choices": [
        "A. exports transitive mammal;",
        "B. exports transitive mammal.eat;",
        "C. requires transitive animal;",
        "D. requires transitive animal.util;",
        "E. transitive requires animal;",
        "F. transitive requires animal.util;"
      ]
    },
    {
      "number": 80,
      "question": "80. Given the diagram in Question 78 and the following module-info.java for the panda module, what is the result of including line m1?\nmodule panda {\n   requires mammal;\n   requires transitive mammal; // line m1\n}",
      "choices": [
        "A. Any modules that require mammal will automatically get panda as well.",
        "B. Any modules that require panda will automatically get mammal as well.",
        "C. There is no change in behavior.",
        "D. The code does not compile."
      ]
    },
    {
      "number": 81,
      "question": "81. How many service providers are allowed to implement a service provider interface?",
      "choices": [
        "A. Exactly one",
        "B. Exactly two",
        "C. One or two",
        "D. One or more",
        "E. None of the above"
      ]
    },
    {
      "number": 82,
      "question": "82. Which of the following are modules supplied by the JDK? (Choose three.)",
      "choices": [
        "A. java.logging",
        "B. java.javadoc",
        "C. java.jdk",
        "D. java.management",
        "E. java.naming",
        "F. java.scripts"
      ]
    },
    {
      "number": 83,
      "question": "83. Which are true of a JAR file that has only one module-info.class file, placed in the META-INF directory? (Choose two.)",
      "choices": [
        "A. It is an automatic module if on the classpath.",
        "B. It is an automatic module if on the module path.",
        "C. It is a named module if on the classpath.",
        "D. It is a named module if on the module path.",
        "E. It is an unnamed module if on the classpath.",
        "F. It is an unnamed module if on the module path."
      ]
    },
    {
      "number": 84,
      "question": "84. Each box in the following diagram corresponds to a module. The service locator and service provider interface share a module. Which boxes represent the consumer and service provider, respectively?",
      "choices": [
        "A. X and Y",
        "B. X and Z",
        "C. Y and Z",
        "D. Z and Z",
        "E. Z and Y",
        "F. None of the above"
      ]
    },
    {
      "number": 85,
      "question": "85. Which of the following statements are most accurate about the ServiceLoader class? (Choose two.)",
      "choices": [
        "A. load() does not take any parameters.",
        "B. load() takes the class type as a parameter.",
        "C. When looping through the results of load(), you need to call the get() method on Provider.",
        "D. When using the results of load() in a Stream, you need to call the get() method on Provider."
      ]
    },
    {
      "number": 86,
      "question": "86. Suppose we have an automatic module on the module path named lizard-^-cricket-^-1.0.0-SNAPSHOT.jar and no Automatic-Module-Name specified. What module name should named modules use to reference it?",
      "choices": [
        "A. lizard-cricket",
        "B. lizard.cricket",
        "C. lizard-cricket-SNAPSHOT",
        "D. lizard-cricket.SNAPSHOT",
        "E. None of the above"
      ]
    },
    {
      "number": 87,
      "question": "87. What file formats are legal for a module to be distributed in?",
      "choices": [
        "A. jar",
        "B. jmod",
        "C. zip",
        "D. jar and jmod",
        "E. jar and zip",
        "F. jmod and zip"
      ]
    },
    {
      "number": 88,
      "question": "88. Why is this module-info incorrect for a service provider?\nmodule plant.flower {\n   exports plant.flower.impl;\n   requires plant.flower.api;\n   provides plant.flower.api.Petal \n      with plant.flower.impl.PetalImpl;\n}",
      "choices": [
        "A. The exports directive should be export.",
        "B. The exports directive should not be present because all calls to the service provider should use the service locator.",
        "C. The provides directive should be uses instead.",
        "D. The provides directive has the implementation and interface in the wrong order.",
        "E. The requires directive should be exports instead.",
        "F. The requires directive should not be present because provides implies it."
      ]
    },
    {
      "number": 89,
      "question": "89. How many modules are part of the cyclic dependency?\nmodule.com.light {\n   exports com.light;\n}\nmodule com.plant {\n   exports com.plant;\n   requires com.light;\n   requires com.animal;\n}\nmodule com.animal {\n   exports com.animal;\n   requires com.light;\n}\nmodule com.worm {\n   exports com.worm;\n   requires com.light;\n   requires com.animal;\n   requires com.plant;\n}",
      "choices": [
        "A. 0",
        "B. 1",
        "C. 2",
        "D. 3",
        "E. 4"
      ]
    },
    {
      "number": 90,
      "question": "90. Which statements are true about requires mandated java.base? (Choose two.)",
      "choices": [
        "A. This output is expected when running the java --list-modules command.",
        "B. This output is expected when running the java --show-module-resolution command.",
        "C. This output is expected when running the jdeps command.",
        "D. This output is expected when running the jmod command.",
        "E. All modules will include this in the output.",
        "F. Some modules will include this in the output."
      ]
    }
  ]
}